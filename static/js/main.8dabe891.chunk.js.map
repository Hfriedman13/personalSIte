{"version":3,"sources":["Assets/selfie.png","Modals/Info.js","Modals/Projects.js","Modals/Resume.js","App.js","reportWebVitals.js","index.js"],"names":["Info","handleClose","id","className","alt","src","selfie","width","height","onClick","Projects","Accordion","Card","Toggle","as","Button","eventKey","Collapse","Body","href","Resume","pdfjs","GlobalWorkerOptions","workerSrc","version","App","toggle","blur","document","getElementById","classList","popup1","projects1","resume1","window","open","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8dabe891.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/selfie.aab65715.png\";","\nimport selfie from '../Assets/selfie.png';\n\nfunction Info({ handleClose }) {\n    return(\n        < div id=\"popup\" >\n            <h2 id=\"popupHeader\">About Me. . . </h2>\n            <h3>Hello!</h3>\n            <image className=\"infoImage\">\n                <img  alt=\"\" src={selfie} width='160' height='275'/>\n            </image>\n            <p id=\"infoPara\">My name is Hannah Friedman, I am an ambitious beginner looking for a challenge. Currently pursuing my bachelorâ€™s in computer science, I am humble and\n        hungry to learn new skills and grow as a developer.  </p>\n            <span className=\"close-button\" onClick={() => handleClose('popup')}>Close</span>\n        </div>\n    );\n}\n\nexport default Info\n","import { Accordion, Card, Button } from 'react-bootstrap'\n\nfunction Projects({ handleClose }) {\n    return (\n        /**Project popup */\n        <div id=\"projects\">\n            <h2 id=\"popupHeader\">Projects!</h2>\n            <Accordion>\n                <Card>\n                    <Accordion.Toggle className='accordionHeader' as={Button} eventKey=\"0\">\n                        Personal Site\n                        </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className='accordionBody'>This webpage is written with React JS, CSS, and HTML. This page will allow vistors to view a brief\n                        about section, view projects I have completed / in the process of completing, as well as my resume, a contact form, and link to my Linkdin and Github. \n                        Thank you for visiting!! \n                        </Card.Body>\n\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Accordion.Toggle className='accordionHeader' as={Button} eventKey=\"1\">\n                        iOS Development Bootcamp\n                        </Accordion.Toggle>\n\n                    <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body className='accordionBody'>I am currently enrolled in a iOS App development bootcamp. During the duration\n                        of the course I have currently completed 10 Apps, as well as developed a love for the Swift language. I am developing\n                        my own app store game with Watch OS, which I hope to be completed available in the app store soon.</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Accordion.Toggle className='accordionHeader' as={Button} eventKey=\"2\">\n                        RunHer\n                    </Accordion.Toggle>\n\n                    <Accordion.Collapse eventKey=\"2\">\n                        <Card.Body className='accordionBody'>\n                            Written in Swift / SwiftUI, I created an iOS app where users can time their runs. I created RunHer to route, time, and track my runs. \n                            RunHer tracks your route in real time. Once your run is completed it shows a map of your run indicated by a \"pace\" line, which\n                            will be green yellow or red depending on your pace throughout the run. It also allows you to save your runs.\n\n               <br></br>\n                <a href=\"https://github.com/Hfriedman13/CPSC-2713\">Repository</a></Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n            <span className=\"close-button\" onClick={() => handleClose('projects')}>Close</span>\n        </ div>\n    );\n}\nexport default Projects\n\n","import React from 'react'\n// // import App from '../App.js';\n// import { Page, Document } from 'react-pdf'\n\n\n// function Resume({handleClose}) {\n//     //const resume = require('../Assets/csalgadoRES.pdf')\n//     return (\n//         < div id=\"resume\" >\n//         <h2 id=\"popupHeader\">Resume</h2>\n//             <Document\n//                 file={require('../Assets/resumePdf.pdf')}\n//             >\n//                 <Page pageNumber={0} />\n//             </Document>\n//             <span className=\"close-button\" onClick={() => handleClose('resume')}>Close</span>\n//         </ div>\n//    \n\nimport { Accordion, Card, Button } from 'react-bootstrap'\n\nfunction Resume({ handleClose }) {\n    return (\n        /**Project popup */\n        <div id=\"resume\">\n            <h2 id=\"popupHeader\">Resume</h2>\n            <Accordion>\n                <Card>\n                    <Accordion.Toggle className='accordionHeader' as={Button} eventKey=\"0\">\n                        Education\n                        </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className='accordionBody'> Florida Gulf Coast University - Bachelors - Sociology\n                        Auburn University - Bachelors - Computer Science \n                        </Card.Body>\n\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Accordion.Toggle className='accordionHeader' as={Button} eventKey=\"1\">\n                        Work History\n                        </Accordion.Toggle>\n\n                    <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body className='accordionBody'>Internship - Studio67 - Web design </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Accordion.Toggle className='accordionHeader' as={Button} eventKey=\"2\">\n                        Skills\n                    </Accordion.Toggle>\n\n                    <Accordion.Collapse eventKey=\"2\">\n                        <Card.Body className='accordionBody'>\n                           * Java <br></br>\n                           * HTML / CSS <br></br>\n                           * JavaScript <br></br>\n                           * Swift / SwiftUI\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n            <span className=\"close-button\" onClick={() => handleClose('resume')}>Close</span>\n        </ div>\n    );\n}\nexport default Resume\n","import './App.css';\nimport Info from './Modals/Info'\nimport Projects from './Modals/Projects'\nimport Resume from './Modals/Resume'\n// import ContactForm from './Modals/ContactForm'\n\nimport {pdfjs} from 'react-pdf'\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n\n\nfunction App() {\n  //blur background while popup is opene\nfunction toggle(id) {\n    var blur = document.getElementById('blur');\n    if (blur) {\n      blur.classList.toggle('active');\n    }\n    \n    //Pop up modals when repspective buttons are clicked \n    switch(id) {\n        case 'popup':\n            var popup1 = document.getElementById('popup');\n            if (popup1){\n              popup1.classList.toggle('active'); \n            }\n            \n        break;\n        case 'projects':\n            var projects1 = document.getElementById('projects');\n            if (projects1){\n              projects1.classList.toggle('active');\n            }\n           \n        break; \n        case 'resume':\n            var resume1 = document.getElementById('resume');\n            if (resume1) {\n              resume1.classList.toggle('active');\n            }\n            \n        // break; \n        // case 'contact':\n        //     var contact1 = document.getElementById('contact');\n        //     if (contact1){\n        //       contact1.classList.toggle('active');\n        //     }\n             \n         break; \n         default:\n           blur.classList.toggle('active');\n           break;\n    }\n\n}\n\n\n  return (\n    <div className=\"App\"> \n    <title>Hannah Friedman</title>\n<body>\n    <div className=\"container\" id=\"blur\">\n        <h1 id=\"nameHeader\">Hannah Friedman</h1>\n        <p id=\"sub\"> Coffee. Code. Repeat.  </p>\n{\n//main page content (header and buttons to popups)\n}\n    <div className=\"content\">\n            <br/>\n            \n          <span>\n            <span className=\"mainButtons\" onClick={() => toggle('popup')}>INFO</span>\n            <br/>\n            <span className=\"mainButtons\" onClick={()=>toggle('projects')}>PROJECTS</span>\n            <br/>\n            <span className=\"mainButtons\" onClick={()=>toggle('resume')}>RESUME</span>\n            {/* <br/>\n            <span className=\"mainButtons\" onClick={()=>toggle('contact')}>Contact</span> */}\n          <div>\n            <span id=\"gitButton\" className=\"mainButtons\" onClick={()=> window.open('https://github.com/Hfriedman13', '_blank')}></span>\n            <span id=\"linkedinButton\" className=\"mainButtons\" onClick={()=> window.open('http://www.linkedin.com/in/hannahruthfriedman', '_blank')}></span>\n          </div>\n          </span>\n            \n        </div>\n    </div>\n\n    {//popups-->\n\n}\n   <Info\n    handleClose={toggle}\n    />\n    <Projects\n    handleClose={toggle}\n    />\n    <Resume\n    handleClose={toggle}\n    />\n    {/* <ContactForm\n    handleClose={toggle} */}\n    {/* /> */}\n</body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}