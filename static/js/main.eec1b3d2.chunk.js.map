{"version":3,"sources":["Assets/selfie.png","Modals/Info.js","Modals/Projects.js","Modals/Resume.js","Modals/ContactForm.js","App.js","reportWebVitals.js","index.js"],"names":["Info","handleClose","id","className","src","selfie","width","height","onClick","Projects","Accordion","Card","Toggle","as","Button","eventKey","Collapse","Body","href","Resume","ContactForm","method","name","action","for","type","placeholder","App","toggle","blur","document","getElementById","classList","popup1","projects1","resume1","contact1","window","open","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eec1b3d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/selfie.aab65715.png\";","\nimport selfie from '../Assets/selfie.png';\n\nfunction Info({ handleClose }) {\n    return(\n        < div id=\"popup\" >\n            <h2 id=\"popupHeader\">About Me. . . </h2>\n            <h3>Hello!</h3>\n            <image className=\"infoImage\">\n                <img src={selfie} width='160' height='275'/>\n            </image>\n            <p id=\"infoPara\">My name is Hannah Friedman, I am an ambitious beginner looking for a challenge. Currently pursuing my bachelorâ€™s in computer science, I am humble and\n        hungry to learn new skills and grow as a developer.  </p>\n            <span className=\"close-button\" onClick={() => handleClose('popup')}>Close</span>\n        </div>\n    );\n}\n\nexport default Info\n","import { Accordion, Card, Button } from 'react-bootstrap'\n\nfunction Projects({ handleClose }) {\n    return (\n        /**Project popup */\n        <div id=\"projects\">\n            <h2 id=\"popupHeader\">Projects!</h2>\n            <Accordion>\n                <Card>\n                    <Accordion.Toggle className='accordionHeader' as={Button} eventKey=\"0\">\n                        Personal Site\n                        </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className='accordionBody'>This webpage is written with React JS, CSS, and HTML. This page will allow vistors to view a brief\n                        about section, view projects I have completed / in the process of completing, as well as my resume, a contact form, and link to my Linkdin and Github. \n                        Thank you for visiting!! \n                        </Card.Body>\n\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Accordion.Toggle className='accordionHeader' as={Button} eventKey=\"1\">\n                        iOS Development Bootcamp\n                        </Accordion.Toggle>\n\n                    <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body className='accordionBody'>I am currently enrolled in a iOS App development bootcamp. During the duration\n                        of the course I have currently completed 10 Apps, as well as developed a love for the Swift language. I am developing\n                        my own app store game with Watch OS, which I hope to be completed available in the app store soon.</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Accordion.Toggle className='accordionHeader' as={Button} eventKey=\"2\">\n                        C# Web Browser\n                    </Accordion.Toggle>\n\n                    <Accordion.Collapse eventKey=\"2\">\n                        <Card.Body className='accordionBody'>\n                            Using Visual Studio and the Windows Forms framework in C#. The web browser has multiple functions, similar to those in a typical\n                web browser. A menubar, tool strip, tab control, etc..\n               <br></br>\n                <a href=\"https://github.com/Hfriedman13/CPSC-2713\">Repository</a></Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n            <span className=\"close-button\" onClick={() => handleClose('projects')}>Close</span>\n        </ div>\n    );\n}\nexport default Projects\n\n","import App from '../App.js';\nimport { Accordion, Card, Button} from 'react-bootstrap'\n\nfunction Resume({handleClose}) {\n    return (\n        < div id=\"resume\" >\n        <h2 id=\"popupHeader\">Resume</h2>\n        <Accordion>\n            <Card>\n                    <Accordion.Toggle className='accordionHeader' as={Button} eventKey=\"0\">\n                        Schooling\n      </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className='accordionBody'>I am currently persuing my Bachelors degree in Computer Science at Auburn University.\n                        I also have a Bachelors in Sociology with a minor in Psychology from Florida Gulf Coast University.</Card.Body>\n                    \n                </Accordion.Collapse>\n            </Card>\n            <Card>\n                 <Accordion.Toggle className='accordionHeader' as={Button} eventKey=\"1\">\n                    Skills and Abilities\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body className='accordionBody'>Experience with Java, Swift, HTML, CSS, and some JavaScript / React. I have a strong \n                        work ethic and management skills. </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n                <Card>\n                        <Accordion.Toggle className='accordionHeader' as={Button} eventKey=\"2\">\n                            Experience \n      </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"2\">\n                        <Card.Body className='accordionBody'>Although I have no work experience as a developer, I have a passion for developing Apps and working with \n                        Swift. </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n        </Accordion>\n            <span className=\"close-button\" onClick={() => handleClose('resume')}>Close</span>\n        </ div>\n    );\n    \n}\nexport default Resume\n","\nfunction ContactForm({handleClose}) {\n    return ( \n        /*Contact popup form */\n        <div id=\"contact\">\n            <h2 id=\"popupHeader\">Contact Me...</h2>\n            <div className=\"row\">\n                <div className=\"colum\">\n                    <form method=\"post\" name=\"contactForm\" action=\"form-to-email.php\">\n                        <label for='name'>Name: </label>\n                        <input type=\"text\" id=\"name\" placeholder=\"First and Last Name...\" />\n\n                        <label for='email'>Email: </label>\n                        <input type=\"text\" id=\"email\" placeholder=\"Email..\" />\n\n                        <label for='message'>Message Me:</label>\n                        <textarea id=\"message\" name=\"message\" placeholder=\"Type message here...\"></textarea>\n                    </form>\n                </div>\n            </div>\n            <input type=\"submit\" />\n            <span className=\"close-button\" onClick={() => handleClose('contact')}>Close</span>\n        </div>\n    );\n    \n}\nexport default ContactForm","import './App.css';\nimport Info from './Modals/Info'\nimport Projects from './Modals/Projects'\nimport Resume from './Modals/Resume'\nimport ContactForm from './Modals/ContactForm'\n\n\nfunction App() {\n\n  //blur background while popup is opene\nfunction toggle(id) {\n    var blur = document.getElementById('blur');\n    if (blur) {\n      blur.classList.toggle('active');\n    }\n    \n    //Pop up modals when repspective buttons are clicked \n    switch(id) {\n        case 'popup':\n            var popup1 = document.getElementById('popup');\n            if (popup1){\n              popup1.classList.toggle('active'); \n            }\n            \n        break;\n        case 'projects':\n            var projects1 = document.getElementById('projects');\n            if (projects1){\n              projects1.classList.toggle('active');\n            }\n           \n        break; \n        case 'resume':\n            var resume1 = document.getElementById('resume');\n            if (resume1) {\n              resume1.classList.toggle('active');\n            }\n            \n        break; \n        case 'contact':\n            var contact1 = document.getElementById('contact');\n            if (contact1){\n              contact1.classList.toggle('active');\n            }\n             \n         break; \n         default:\n           blur.classList.toggle('active');\n           break;\n    }\n\n}\n\n\n  return (\n    <div className=\"App\"> \n      <head>\n    <title>Hannah Friedman</title>\n</head>\n<body>\n    <div className=\"container\" id=\"blur\">\n        <h1 id=\"nameHeader\">Hannah Friedman</h1>\n{\n//main page content (header and buttons to popups)\n}\n    <div className=\"content\">\n            <br/>\n            <button className=\"mainButtons\" onClick={()=> toggle('popup')}>INFO</button>\n            <br/>\n            <button className=\"mainButtons\" onClick={()=>toggle('projects')}>PROJECTS</button>\n            <br/>\n            <button className=\"mainButtons\" onClick={()=>toggle('resume')}>RESUME</button>\n            <br/>\n            <button className=\"mainButtons\" onClick={()=>toggle('contact')}>Contact</button>\n     \n            <button id=\"gitButton\" className=\"mainButtons\" onClick={()=> window.open('https://github.com/Hfriedman13', '_blank')}></button>\n            <button id=\"linkedinButton\" className=\"mainButtons\" onClick={()=> window.open('http://www.linkedin.com/in/hannahruthfriedman', '_blank')}></button>\n        </div>\n    </div>\n\n    {//popups-->\n\n}\n   <Info\n    handleClose={toggle}\n    />\n    <Projects\n    handleClose={toggle}\n    />\n    <Resume\n    handleClose={toggle}\n    />\n    <ContactForm\n    handleClose={toggle}\n    />\n</body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}